diff -ur a/kernel/nvidia-drm/nvidia-drm-connector.c b/kernel/nvidia-drm/nvidia-drm-connector.c
--- a/kernel/nvidia-drm/nvidia-drm-connector.c	2019-03-15 13:56:25.000000000 -0400
+++ b/kernel/nvidia-drm/nvidia-drm-connector.c	2019-05-07 02:28:22.812497069 -0400
@@ -201,6 +201,14 @@
     return __nv_drm_connector_detect_internal(connector);
 }
 
+#include <linux/version.h>
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 1, 0)
+/* Add header constants missing after 5.1-rc1 */
+int drm_helper_probe_single_connector_modes(struct drm_connector
+*connector, uint32_t maxX,
+uint32_t maxY);
+#endif
+
 static struct drm_connector_funcs nv_connector_funcs = {
 #if defined NV_DRM_ATOMIC_HELPER_CONNECTOR_DPMS_PRESENT
     .dpms                   = drm_atomic_helper_connector_dpms,
diff -ur a/kernel/nvidia-drm/nvidia-drm-drv.c b/kernel/nvidia-drm/nvidia-drm-drv.c
--- a/kernel/nvidia-drm/nvidia-drm-drv.c	2019-03-15 13:56:25.000000000 -0400
+++ b/kernel/nvidia-drm/nvidia-drm-drv.c	2019-05-07 02:28:22.812497069 -0400
@@ -35,6 +35,15 @@
 #include "nvidia-drm-gem-nvkms-memory.h"
 #include "nvidia-drm-gem-user-memory.h"
 
+#include <linux/version.h>
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 1, 0)
+/* Add header constants missing after 5.1-rc1 */
+void drm_kms_helper_poll_init(struct drm_device *dev);
+void drm_kms_helper_poll_fini(struct drm_device *dev);
+bool drm_helper_hpd_irq_event(struct drm_device *dev);
+void drm_kms_helper_poll_disable(struct drm_device *dev);
+#endif
+
 #if defined(NV_DRM_AVAILABLE)
 
 #include "nvidia-drm-ioctl.h"
diff -ur a/kernel/nvidia-drm/nvidia-drm-encoder.c b/kernel/nvidia-drm/nvidia-drm-encoder.c
--- a/kernel/nvidia-drm/nvidia-drm-encoder.c	2019-03-15 13:56:25.000000000 -0400
+++ b/kernel/nvidia-drm/nvidia-drm-encoder.c	2019-05-07 02:28:22.812497069 -0400
@@ -31,6 +31,12 @@
 #include "nvidia-drm-crtc.h"
 #include "nvidia-drm-helper.h"
 
+#include <linux/version.h>
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 1, 0)
+/* Add header constants missing after 5.1-rc1 */
+void drm_kms_helper_hotplug_event(struct drm_device *dev);
+#endif
+
 #include <drm/drm_crtc_helper.h>
 
 #include <drm/drm_atomic.h>
@@ -152,6 +158,13 @@
     return &nv_encoder->base;
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 1, 0)
+/* Add header constants missing after 5.1-rc1 */
+int drm_helper_probe_single_connector_modes(struct drm_connector
+*connector, uint32_t maxX,
+uint32_t maxY);
+#endif
+
 /*
  * Add encoder for given NvKmsKapiDisplay
  */
diff -ur a/kernel/nvidia-drm/nvidia-drm-gem-nvkms-memory.c b/kernel/nvidia-drm/nvidia-drm-gem-nvkms-memory.c
--- a/kernel/nvidia-drm/nvidia-drm-gem-nvkms-memory.c	2019-03-15 13:56:25.000000000 -0400
+++ b/kernel/nvidia-drm/nvidia-drm-gem-nvkms-memory.c	2019-05-07 02:28:22.816496999 -0400
@@ -377,7 +377,7 @@
  */
 
 #if defined(NV_VM_OPS_FAULT_REMOVED_VMA_ARG)
-static int nv_drm_vma_fault(struct vm_fault *vmf)
+static vm_fault_t nv_drm_vma_fault(struct vm_fault *vmf)
 {
     return __nv_drm_vma_fault(vmf->vma, vmf);
 }
diff -ur a/kernel/nvidia-uvm/uvm8.c b/kernel/nvidia-uvm/uvm8.c
--- a/kernel/nvidia-uvm/uvm8.c	2019-03-15 13:56:25.000000000 -0400
+++ b/kernel/nvidia-uvm/uvm8.c	2019-05-07 02:28:22.820496926 -0400
@@ -172,7 +172,11 @@
     return VM_FAULT_SIGBUS;
 }
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 1, 0)
 static int uvm_vm_fault_sigbus_wrapper(struct vm_fault *vmf)
+#else
+static vm_fault_t uvm_vm_fault_sigbus_wrapper(struct vm_fault *vmf)
+#endif
 {
 #if defined(NV_VM_OPS_FAULT_REMOVED_VMA_ARG)
     return uvm_vm_fault_sigbus(vmf->vma, vmf);
@@ -507,7 +511,11 @@
     }
 }
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 1, 0)
 static int uvm_vm_fault_wrapper(struct vm_fault *vmf)
+#else
+static vm_fault_t uvm_vm_fault_wrapper(struct vm_fault *vmf)
+#endif
 {
 #if defined(NV_VM_OPS_FAULT_REMOVED_VMA_ARG)
     return uvm_vm_fault(vmf->vma, vmf);
